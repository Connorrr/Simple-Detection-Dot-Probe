#File: 			DPTHelpers.pcl
#Description:	Contains the additional subroutines used in the experiment
#Programmer:	Connor Reid (Psy Technician)
#Created@:		15/07/2016
#LastMod@:		8/08/2016
#ModifiedBy:	Connor Reid
#Copyright@: 	School Of Psychology, Griffith University
#-------------------------------------------------------------------

sub print_2d_array(array <string, 2>& arr) begin		##Used to terminal print 2d arrays
	loop int j = 1 until j > arr.count() begin
		term.print(string(j) + ": ");
		loop int k = 1 until k > arr[j].count() begin
			term.print(arr[j][k] + "\t");
			k = k + 1;
		end;
		term.print("\n");
		j = j + 1;
	end;
end;

sub print_1d_int_array(array <int, 1>& arr) begin		##Used to terminal print 1d int arrays
	term.print_line("1D Array: ");
	loop int j = 1 until j > arr.count() begin
		term.print(string(arr[j]) + ", ");
		j = j + 1;
	end;
end;

sub
	get_input_csv(string file_path, array <string, 2>& stim)		# Get stimulus from this multi column file.  
begin
	stim.resize(0);
	
	input_file in_stim = new input_file;

	in_stim.open(file_path);

	in_stim.set_delimiter( ',' ); 	# for get_line()

	array <string> tmpstim[0];
		
	loop int count = 1 until
		in_stim.end_of_file() || count == 100 || !in_stim.last_succeeded()
	begin
		in_stim.get_string().split(",",tmpstim);
		if (tmpstim[1] != "")then
			stim.add(tmpstim);
			tmpstim.resize(0);
		end;
		count = count + 1;
	end;

	#print_2d_array(stim);
end;

sub setPictures begin
	main_pic.set_part_y(1, YPOS);
	main_pic.set_part_y(2, -1*YPOS);
end;

####  Get response after main trial has been presented.  Returns the reation time.
sub getResponse(array <int, 1> &resp, int side) begin
	if (bool( response_manager.response_count() )) then		#  If a key is pressed
		stimulus_data last = stimulus_manager.last_stimulus_data();		#  Last button Pressed
		resp[1] = last.reaction_time();
		if (side == 1 && last.button() == 1) then
			resp[2] = 1;	#  Correct
		elseif(side == 2 && last.button() == 2) then
			resp[2] = 1;	#  Correct
		else
			resp[2] = 0;
		end;
		resp[3] = last.button();
	end;
end;

##  Sets the '<' or '>' character depending on the value sent through (1-4)
sub setResponsePos(int k, array <int, 1>& arrow) begin
	int pad = 12;			#  Padding used to make dots appear in the center of text
	if (k == 1) then	## < Top
		response_pic.set_part_y(1,YPOS+pad);
		response_text.set_caption(".");
		response_text.redraw();
		arrow[1] = 1;
		arrow[2] = 1;
	elseif (k == 2) then	## > Top
		response_pic.set_part_y(1,YPOS+pad);
		response_text.set_caption(".");
		response_text.redraw();
		arrow[1] = 2;
		arrow[2] = 1;
	elseif(k == 3) then	## < Bottom
		response_pic.set_part_y(1,-1*YPOS+pad);
		response_text.set_caption(".");
		response_text.redraw();
		arrow[1] = 1;
		arrow[2] = 2;
	elseif(k == 4) then	## > Bottom
		response_pic.set_part_y(1,-1*YPOS+pad);
		response_text.set_caption(".");
		response_text.redraw();
		arrow[1] = 2;
		arrow[2] = 2;
	end;
end;

## Get Word Pair Variations
sub getWordPairVariations(array <string, 2>& wordPairs, string firstWord, string secondWord)begin
	loop int i = 1; until i > wordPairs.count() begin
		
		if (mod(i,2) == 0) then # is even
			wordPairs[i][1] = firstWord;
			wordPairs[i][2] = secondWord;
		else
			wordPairs[i][1] = secondWord;
			wordPairs[i][2] = firstWord;
		end;
		
		i = i + 1;
	end;
	wordPairs.shuffle();
end;

##  This sub takes the words list and duplicates it 8x and assigns it a with arrow direction and placement
sub buildMainTrialList(array <string, 2>& inArray, array <string, 2>& outArray)begin
	array <int> responsePos[8] = {1,2,3,4,1,2,3,4};		#  4 different arrow positions/directions for 2 word positions
	array <string> tmp[3] = {"","",""};
	loop
		int i = 1
	until 
		i > inArray.count()
	begin
		loop
			int j = 1
		until 
			j > 8
		begin
			if (j < 5) then
				tmp[1] = inArray[i][1]; tmp[2] = inArray[i][2]; tmp[3] = string(responsePos[j]); 
			else
				tmp[1] = inArray[i][2]; tmp[2] = inArray[i][1]; tmp[3] = string(responsePos[j]); 
			end;
			outArray.add(tmp);
			j = j + 1;
		end;
		i = i + 1;
	end;
	#print_2d_array(outArray);
end;

## Save Output Data  Trial No,Trial Type,Top Word,Bottom Word,Response,RT,Correct
sub
saveTrialData(output_file out,int trialNo,string trialType,string topWord,string bottomWord,int resp,int rt,int arrowPos)
begin
	out.print(trialNo);
	out.print(",");
	out.print(trialType);
	out.print(",");
	out.print(topWord);
	out.print(",");
	out.print(bottomWord);
	out.print(",");
	out.print(resp);
	out.print(",");
	out.print(rt);
	out.print(",");
	out.print(arrowPos);
	out.print("\n");
end;

## Used to present trials for either the practice or main block
## Takes stim array and the Trial type String and output file
sub presentTrials(array <string, 2>& stim, string trialType, output_file out) begin
	array <string> fullStim[0][0];
	buildMainTrialList(stim,fullStim);
	fullStim.shuffle();
	int i=0;
	loop 
		i = 1;
	until 
		i > fullStim.count()		#  Loop through trials
	begin
		array <int> resp[3] = {0,0,0};	# RT, isCorrect, Button Pressed
		
		array <int> arrow[2]={0,0};
		
		fixation_trial.present();
		
		top_text.set_caption(fullStim[i][1]);
		bottom_text.set_caption(fullStim[i][2]);
		top_text.redraw();
		bottom_text.redraw();
			
		main_trial.present();
			
		setResponsePos(int(fullStim[i][3]),arrow);	
			
		response_trial.present();
		getResponse(resp,arrow[1]);
		
		saveTrialData(out,i,trialType,fullStim[i][1],fullStim[i][2],resp[3],resp[1],arrow[2]);
			
		i = i + 1;
	end;
end;


##  This sub takes the words list and duplicates it 8x and assigns it a with arrow direction and placement
sub buildPracticeTrialList(array <string, 2>& inArray, array <string, 2>& outArray)begin
	array <int> responsePos[30] = {1, 2, 2, 1, 1, 4, 4, 3, 4, 4, 2, 3, 3, 4, 3, 4, 2, 4, 1, 3, 1, 1, 2, 3, 3, 2, 3, 1, 2, 2, 1};		#  4 different arrow positions/directions for 2 word positions
	array <string> tmp[3] = {"","",""};
	loop
		int fullCount = 1;
		int i = 1
	until 
		i > inArray.count()
	begin
		loop
			int j = 1
		until 
			j > 2
		begin
			if (j < 2) then
				tmp[1] = inArray[i][1]; tmp[2] = inArray[i][2]; tmp[3] = string(responsePos[fullCount]); 
			else
				tmp[1] = inArray[i][2]; tmp[2] = inArray[i][1]; tmp[3] = string(responsePos[fullCount]); 
			end;
			outArray.add(tmp);
			fullCount = fullCount + 1;
			j = j + 1;
		end;
		i = i + 1;
	end;
	#print_2d_array(outArray);
end;

## Used to present practice trials 
## Takes stim array and the Trial type String and output file
sub presentPracticeTrials(array <string, 2>& stim, string trialType, output_file out) begin
	array <string> fullStim[0][0];
	buildPracticeTrialList(stim,fullStim);
	fullStim.shuffle();
	int i=0;
	loop 
		i = 1;
	until 
		i > fullStim.count()		#  Loop through trials
	begin
		array <int> resp[3] = {0,0,0};	# RT, isCorrect, Button Pressed
		
		array <int> arrow[2]={0,0};
		
		fixation_trial.present();
		
		top_text.set_caption(fullStim[i][1]);
		bottom_text.set_caption(fullStim[i][2]);
		top_text.redraw();
		bottom_text.redraw();
			
		main_trial.present();
			
		setResponsePos(int(fullStim[i][3]),arrow);	
			
		response_trial.present();
		getResponse(resp,arrow[1]);
			
		saveTrialData(out,i,trialType,fullStim[i][1],fullStim[i][2],resp[3],resp[1],arrow[2]);	
			
		i = i + 1;
	end;
end;

